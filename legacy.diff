diff --git a/crypto/threads_win.c b/crypto/threads_win.c
index bcc6098191..e9afc3ade6 100644
--- a/crypto/threads_win.c
+++ b/crypto/threads_win.c
@@ -474,8 +474,14 @@ CRYPTO_RWLOCK *CRYPTO_THREAD_lock_new(void)
 #  if !defined(_WIN32_WCE)
     /* 0x400 is the spin count value suggested in the documentation */
     if (!InitializeCriticalSectionAndSpinCount(lock, 0x400)) {
-        OPENSSL_free(lock);
-        return NULL;
+        /* On Windows 9x the return value of InitializeCriticalSectionAndSpinCount is unreliable,
+           because it is implemented as a simple wrapper that calls InitializeCriticalSection (a void function). */
+        OSVERSIONINFOA osvi = { 0 };
+        osvi.dwOSVersionInfoSize = sizeof(osvi);
+        if (!GetVersionExA(&osvi) || (osvi.dwPlatformId == VER_PLATFORM_WIN32_NT)) {
+            OPENSSL_free(lock);
+            return NULL;
+        }
     }
 #  else
     InitializeCriticalSection(lock);
diff --git a/include/internal/e_os.h b/include/internal/e_os.h
index 003d63e17f..62e18c5fbd 100644
--- a/include/internal/e_os.h
+++ b/include/internal/e_os.h
@@ -107,7 +107,7 @@
         * at run-time [DSO_global_lookup is recommended]...
         */
 #    include <winsock2.h>
-#    include <ws2tcpip.h>
+#    include <wspiapi.h>
        /*
         * Clang-based C++Builder 10.3.3 toolchains cannot find C inline
         * definitions at link-time.  This header defines WspiapiLoad() as an
diff --git a/providers/implementations/rands/seeding/rand_win.c b/providers/implementations/rands/seeding/rand_win.c
index ee2d3e4d7f..e4c6794820 100644
--- a/providers/implementations/rands/seeding/rand_win.c
+++ b/providers/implementations/rands/seeding/rand_win.c
@@ -41,7 +41,7 @@
  * http://developer.intel.com/design/security/rng/redist_license.htm
  */
 #  define PROV_INTEL_SEC 22
-#  define INTEL_DEF_PROV L"Intel Hardware Cryptographic Service Provider"
+#  define INTEL_DEF_PROV "Intel Hardware Cryptographic Service Provider"
 # endif
 
 size_t ossl_pool_acquire_entropy(RAND_POOL *pool)
@@ -86,8 +86,8 @@ size_t ossl_pool_acquire_entropy(RAND_POOL *pool)
     if (buffer != NULL) {
         size_t bytes = 0;
         /* poll the CryptoAPI PRNG */
-        if (CryptAcquireContextW(&hProvider, NULL, NULL, PROV_RSA_FULL,
-                                 CRYPT_VERIFYCONTEXT | CRYPT_SILENT) != 0) {
+        if (CryptAcquireContextA(&hProvider, NULL, NULL, PROV_RSA_FULL,
+                                 CRYPT_VERIFYCONTEXT) != 0) {
             if (CryptGenRandom(hProvider, bytes_needed, buffer) != 0)
                 bytes = bytes_needed;
 
@@ -105,7 +105,7 @@ size_t ossl_pool_acquire_entropy(RAND_POOL *pool)
     if (buffer != NULL) {
         size_t bytes = 0;
         /* poll the Pentium PRG with CryptoAPI */
-        if (CryptAcquireContextW(&hProvider, NULL,
+        if (CryptAcquireContextA(&hProvider, NULL,
                                  INTEL_DEF_PROV, PROV_INTEL_SEC,
                                  CRYPT_VERIFYCONTEXT | CRYPT_SILENT) != 0) {
             if (CryptGenRandom(hProvider, bytes_needed, buffer) != 0)
